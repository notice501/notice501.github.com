<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类：vim | Code Rush]]></title>
  <link href="http://notice501.github.com/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://notice501.github.com/"/>
  <updated>2014-04-01T23:41:09+08:00</updated>
  <id>http://notice501.github.com/</id>
  <author>
    <name><![CDATA[foocoder]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[每天一个vim插件--开篇之vundle]]></title>
    <link href="http://notice501.github.com/blog/mei-tian-%5B%3F%5D-ge-vimcha-jian-kai-pian-zhi-vundle.html/"/>
    <updated>2014-04-01T22:34:00+08:00</updated>
    <id>http://notice501.github.com/blog/mei-tian-[?]-ge-vimcha-jian-kai-pian-zhi-vundle</id>
    <content type="html"><![CDATA[<p>一直想写一篇博客介绍我的vim配置和插件，但是这篇博客却难产了快半年……
工作太忙，写博客变成了奢侈的事情。那何不每天写一点点呢？于是决定每天介绍一个vim插件或者一个技巧。</p>

<p>大致看了一下自己的<a href="https://github.com/notice501/dotfiles">vim配置</a>，竟然都快有100个插件之多了……</p>

<p>但是我从来都没有感觉到插件管理有多麻烦，我可以经常更新，删除和安装想用的插件。所以第一个介绍的插件必须是用来管理插件的神器–<a href="https://github.com/gmarik/Vundle.vim">Vundle</a></p>

<p>在使用vundle之前，我使用Pathogen与git submodule来管理Vim插件，而vundle更为强大，不需要再手动操作git了。Vundle会自动去对应的插件git库获取最新的插件。
<!--more--></p>

<p>Vundle的安装非常简单：</p>

<ol>
  <li>当然你需要安装git</li>
  <li>git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</li>
  <li>配置vimrc。我建议像我一样单独写个bundles.vim，(我还是用的Bundle这个名字，但是写这篇博客的时候发现作者已经废弃了这个名字，统一叫做plugin)方便管理。示例如下：</li>
</ol>

<pre><code> <div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set nocompatible              " be iMproved, required filetype off                  " required
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>” set the runtime path to include Vundle and initialize
</span><span class='line'>set rtp+=~/.vim/bundle/vundle/
</span><span class='line'>call vundle#rc()
</span><span class='line'>“ alternatively, pass a path where Vundle should install plugins
</span><span class='line'>“let path = ‘~/some/path/here’
</span><span class='line'>“call vundle#rc(path)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>” let Vundle manage Vundle, required
</span><span class='line'>Plugin ‘gmarik/vundle’&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>” The following are examples of different formats supported.
</span><span class='line'>“ Keep Plugin commands between here and filetype plugin indent on.
</span><span class='line'>“ scripts on GitHub repos
</span><span class='line'>Plugin ‘tpope/vim-fugitive’
</span><span class='line'>Plugin ‘Lokaltog/vim-easymotion’
</span><span class='line'>Plugin ‘tpope/vim-rails.git’
</span><span class='line'>“ The sparkup vim script is in a subdirectory of this repo called vim.
</span><span class='line'>“ Pass the path to set the runtimepath properly.
</span><span class='line'>Plugin ‘rstacruz/sparkup’, {‘rtp’: ‘vim/’}
</span><span class='line'>“ scripts from http://vim-scripts.org/vim/scripts.html
</span><span class='line'>Plugin ‘L9’
</span><span class='line'>Plugin ‘FuzzyFinder’
</span><span class='line'>“ scripts not on GitHub
</span><span class='line'>Plugin ‘git://git.wincent.com/command-t.git’
</span><span class='line'>“ git repos on your local machine (i.e. when working on your own plugin)
</span><span class='line'>Plugin ‘file:///home/gmarik/path/to/plugin’
</span><span class='line'>“ …&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>filetype plugin indent on     “ required
</span><span class='line'>“ To ignore plugin indent changes, instead use:
</span><span class='line'>“filetype plugin on
</span><span class='line'>“
</span><span class='line'>“ Brief help
</span><span class='line'>“ :PluginList          - list configured plugins
</span><span class='line'>“ :PluginInstall(!)    - install (update) plugins
</span><span class='line'>“ :PluginSearch(!) foo - search (or refresh cache first) for foo
</span><span class='line'>“ :PluginClean(!)      - confirm (or auto-approve) removal of unused plugins
</span><span class='line'>“
</span><span class='line'>“ see :h vundle for more details or wiki for FAQ
</span><span class='line'>“ NOTE: comments after Plugin commands are not allowed.
</span><span class='line'>“ Put your stuff after this line</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后在vimrc的开头引入bundles.vim:</p>

<pre><code>source ~/.vim/bundles.vim
</code></pre>

<p>4.如示例所示，将所有的插件都写成plugin ‘user/repo’即可。vundle会从该库中去取。</p>

<p>如果未加’/’，则默认从vim script: https://github.com/vim-scripts/ 去取
	还可以加上非github库：</p>

<pre><code>Plugin 'git://git.wincent.com/command-t.git'
	
或者本地文件

Plugin 'file///path/from/root/to/plugin'
</code></pre>

<p>5.安装只需输入</p>

<pre><code>:BundleInstall 或者 :pluginInstall
</code></pre>

<p>更新：</p>

<pre><code>:pluginUpdate
</code></pre>

<p>删除：</p>

<pre><code>:pluginClean
</code></pre>

<p>6.vundle 还带了插件搜索功能</p>

<pre><code>:PluginSearch foo
</code></pre>

<p>搜索结果会在新窗口打开，然后可以进行直接安装删除等操作。</p>

<p>从Vundle开始，享受vim丰富的插件带来的爽快感吧~</p>
]]></content>
  </entry>
  
</feed>
